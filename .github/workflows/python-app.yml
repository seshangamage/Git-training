name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt

    - name: Run tests
      run: |
        pytest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2 with Docker
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Install Docker if not present
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo yum install -y docker
            sudo systemctl enable --now docker
            sudo usermod -aG docker ec2-user
          fi

          # Clone or update the repo
          if [ ! -d "/home/ec2-user/Git-training/.git" ]; then
            echo "Cloning the repository..."
            git clone https://github.com/seshangamage/Git-training.git
          fi

          cd /home/ec2-user/Git-training
          git pull origin main

          # Build and run the Docker container
          sudo docker stop python-app || true
          sudo docker rm python-app || true

          sudo docker build -t python-app .
          sudo docker run -d --name python-app -p 80:8000 python-app
        EOF
